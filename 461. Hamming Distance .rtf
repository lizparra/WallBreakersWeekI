class Solution {
    public int hammingDistance(int x, int y) {
        String a = Integer.toBinaryString(x);
        String b = Integer.toBinaryString(y);
        char[] arr1 = a.toCharArray(); 
        char[] arr2 = b.toCharArray(); 
        if(arr1.length < arr2.length){
            arr1 = fillInZero(arr1, arr2.length);
        } else {
            arr2 = fillInZero(arr2, arr1.length);
        }
        int count = 0;
        for(int i = 0; i < arr1.length; i++){
            if(arr1[i] != arr2[i]){
                count++;
            }
        }
        return count;
    }
    public char[] fillInZero(char[] arr, int size){
        char[] newArr = new char[size]; 
        int j = size - 1;
        for(int i = arr.length - 1; i >= 0; i--){
            if(arr[i] == '1'){
                newArr[j] = '1';
            } else {
                newArr[j] = '0';
            }
            j--;
        }
        for(int i = 0; i < (newArr.length - arr.length); i++){
            if(newArr[i] != '1'){
                newArr[i] = '0';
            }
        }
        return newArr;
    }
}
