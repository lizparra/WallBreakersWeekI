{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf500
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red25\green25\blue25;\red255\green255\blue255;\red67\green91\blue103;
}
{\*\expandedcolortbl;;\cssrgb\c12941\c12941\c12941;\cssrgb\c100000\c100000\c100000;\cssrgb\c32941\c43137\c47843;
}
\margl1440\margr1440\vieww7700\viewh17500\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\b\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
200.\'a0Number of Islands\

\f1\b0\fs24 \cf4 \cb1 \
\pard\pardeftab720\sl400\partightenfactor0
\cf4 class Solution \{\
    public int numIslands(char[][] grid) \{\
        if (grid.length == 0) return 0;\
        int count = 0;\
        \
        for (int i = 0; i < grid.length; i++)\{\
            for (int j = 0; j < grid[0].length; j++)\
                if (grid[i][j] == '1') \{\
                    IntoWater(grid, i, j, grid.length, grid[0].length);\
                    count++;\
                \}\
        \}    \
        return count; \
    \}\
    \
    private void IntoWater(char[][] grid, int i, int j, int n, int m) \{\
            if (i < 0 || j < 0 || i >= n || j >= m || grid[i][j] != '1')\{\
                return;\
            \}\
        \
            grid[i][j] = '0';\
        \
            IntoWater(grid, i + 1, j, n, m);\
            IntoWater(grid, i - 1, j, n, m);\
            IntoWater(grid, i, j + 1, n, m);\
            IntoWater(grid, i, j - 1, n, m);\
    \}\
\}\
\
\
}