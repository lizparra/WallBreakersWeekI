{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf500
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red25\green25\blue25;\red255\green255\blue255;\red67\green91\blue103;
}
{\*\expandedcolortbl;;\cssrgb\c12941\c12941\c12941;\cssrgb\c100000\c100000\c100000;\cssrgb\c32941\c43137\c47843;
}
\margl1440\margr1440\vieww7700\viewh17500\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\b\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
868.\'a0Binary Gap\
\pard\pardeftab720\sl400\partightenfactor0

\f1\b0\fs24 \cf4 \cb1 \
class Solution \{\
    public int binaryGap(int N) \{\
        if(Integer.bitCount(N) <= 1)\{\
            return 0;\
        \}\
        \
        String s = Integer.toBinaryString(N);\
        int max = 1;   \
        int count = 0; \
        int index = 0; \
        \
        for(int i = s.length() - 1; i >= 0; i--)\{ \
            if(s.charAt(i) == '1')\{\
                index = i;\
                break;\
            \}\
        \}\
        for(int i = index; i >= 0; i--)\{  // 3, 2, 1, 0\
            while(s.charAt(i) != '1')\{\
                i--;\
                count++;\
            \}\
            count++;\
            if(count > max)\{\
                max = count;\
            \}\
            count = 0;\
        \}\
        \
        return max;\
    \}\
\}\
\
}