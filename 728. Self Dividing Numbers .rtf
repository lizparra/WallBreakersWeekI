{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf500
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red25\green25\blue25;\red255\green255\blue255;\red67\green91\blue103;
}
{\*\expandedcolortbl;;\cssrgb\c12941\c12941\c12941;\cssrgb\c100000\c100000\c100000;\cssrgb\c32941\c43137\c47843;
}
\margl1440\margr1440\vieww7700\viewh17500\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\b\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
728.\'a0Self Dividing Numbers\
\pard\pardeftab720\sl400\partightenfactor0

\f1\b0\fs24 \cf4 \cb1 \
class Solution \{\
    public List<Integer> selfDividingNumbers(int left, int right) \{\
       List<Integer> list = new ArrayList<Integer>();\
        for(int i = left; i <= right; i++)\{\
            if(selfDividing(i))\{\
                list.add(i);\
            \}\
        \}\
        return list;\
    \}\
    \
    public boolean selfDividing(int num)\{\
        int n = num;\
        int k = 0; \
        if(n == 0)\{\
            return false;\
        \}\
        while(n > 0)\{\
            k = n % 10;\
            if(k == 0 || ((num % k) != 0))\{\
                return false;\
            \} else \{\
                n = n / 10;\
            \}\
        \}\
        return true;\
    \}\
\}\
\
}